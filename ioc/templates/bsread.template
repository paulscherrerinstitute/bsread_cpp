## When this record is processed a all of the
## channels that are currently configured are read out and
## sent out
##
## FIELDS:
##  - INPA [LONG]: pulse-id, in normal use the link should point to
##                 to pulse-id record provided by timing system
##
##  - VALA [LONG]: Time in [nsec] spent in reading, encode and buffer copy to zmq.
##                 This is used as a performance measurement, this should never be greater
##                 than 1ms.
##

record(aSub, "$(P):READ")
{
    field(INAM,"bsread_read_init")
    field(SNAM,"bsread_read")
	field(SCAN, "Passive")
	#Inputs 
	field(FTA, "ULONG")
	field(INPA, "$(BSREAD_PULSEID) NPP")	##Pulse ID
	field(FTB,"ULONG")
	field(INPB, "$(BSREAD_TS_SEC) NPP")     ##Global TS sec
	field(FTC, "ULONG")
	field(INPC, "$(BSREAD_TS_NSEC) NPP") 	##Global TS nsec

    field(FTVA, "DOUBLE")					# Time in seconds required to take the last snapshot
    field(FTVB, "ULONG")					# Number of snapshot time overruns (FTVA > 1ms)
    field(FTVC, "ULONG")					# Number of ZMQ message overflows
    field(PREC,6)
}


## Record is used to configure the bsread system
## INPA should point to character waveform record containing
## JSON configuration. Record state will go into MAJOR
## alarm (specified by BRSV field) if configuration is invalid.
##
## Example JSON configuration:
## {"channels":
##    [
##        {"name":   "BSREAD-TEST:TEST_1",
##        "offset":1,
##        "frequency":100 },
##        {"name":"BSREAD-TEST:TEST_2",
##        "offset":1,
##        "frequency":10}
##    ]}

record(aSub, "$(P):CONFIGURE")
{
	field(INAM,"bsread_configure_init")
	field(SNAM,"bsread_configure")
	field(SCAN, "Passive")
	field(NOA, "100000")
	field(FTA, "CHAR")
	field(INPA, "$(P):CONFIGURATION.VAL NPP")
	field(BRSV, "MAJOR")
}


## Waveform holding the configuration of the bsread

record(waveform, "$(P):CONFIGURATION")
{
	field(SCAN, "Passive")
	field(NELM, "10000")	
	field(FTVL, "CHAR")
	field(FLNK, "$(P):CONFIGURE")
}


## Trigger record from EVR

record(longout, "$(P):Trig-Event_") {
  field(DTYP, "EVR Event")
  field(SCAN, "I/O Intr")
  field(OUT , "@OBJ=$(EVR),Code=$(BSREAD_EVENT)")
  field(VAL , "0")
  field(TSE , "-2") # from device support
  field(FLNK, "$(P):READ")
}
